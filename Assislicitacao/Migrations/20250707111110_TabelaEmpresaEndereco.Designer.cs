// <auto-generated />
using Assislicitacao.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assislicitacao.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250707111110_TabelaEmpresaEndereco")]
    partial class TabelaEmpresaEndereco
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Assislicitacao.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EMP_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("EMP_CNPJ");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int")
                        .HasColumnName("EMP_END_ID");

                    b.Property<int>("PorteEmrpesaId")
                        .HasColumnType("int")
                        .HasColumnName("EMP_PTE_ID");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EMP_RAZAO_SOCIAL");

                    b.HasKey("Id");

                    b.HasIndex("CNPJ")
                        .IsUnique();

                    b.HasIndex("EnderecoId");

                    b.HasIndex("PorteEmrpesaId");

                    b.ToTable("EMPRESAS");
                });

            modelBuilder.Entity("Assislicitacao.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("END_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("END_BAIRRO");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("END_CEP");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("END_LOGRADOURO");

                    b.Property<int>("MunicipioId")
                        .HasColumnType("int")
                        .HasColumnName("END_MUC_ID");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("END_NUMERO");

                    b.HasKey("Id");

                    b.HasIndex("MunicipioId");

                    b.ToTable("ENDERECOS");
                });

            modelBuilder.Entity("Assislicitacao.Models.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EST_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("EST_UF");

                    b.HasKey("Id");

                    b.HasIndex("Uf")
                        .IsUnique();

                    b.ToTable("ESTADOS");
                });

            modelBuilder.Entity("Assislicitacao.Models.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MUC_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstadoId")
                        .HasColumnType("int")
                        .HasColumnName("MUC_USU_ID");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("MUC_NOME");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.HasIndex("Nome", "EstadoId")
                        .IsUnique();

                    b.ToTable("MUNICIPIOS");
                });

            modelBuilder.Entity("Assislicitacao.Models.PorteEmpresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PTE_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Porte")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PTE_PORTE");

                    b.HasKey("Id");

                    b.HasIndex("Porte")
                        .IsUnique();

                    b.ToTable("PORTES_EMPRESA");
                });

            modelBuilder.Entity("Assislicitacao.Models.TipoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TPU_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TPU_TIPO");

                    b.HasKey("Id");

                    b.ToTable("TIPOS_USUARIO");
                });

            modelBuilder.Entity("Assislicitacao.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("USU_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USU_EMAIL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USU_NOME");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USU_SENHA");

                    b.Property<int>("TipoId")
                        .HasColumnType("int")
                        .HasColumnName("USU_TPU_ID");

                    b.HasKey("Id");

                    b.HasIndex("TipoId");

                    b.ToTable("USUARIOS");
                });

            modelBuilder.Entity("Assislicitacao.Models.Empresa", b =>
                {
                    b.HasOne("Assislicitacao.Models.Endereco", "Endereco")
                        .WithMany("Empresas")
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assislicitacao.Models.PorteEmpresa", "PorteEmpresa")
                        .WithMany("Empresas")
                        .HasForeignKey("PorteEmrpesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");

                    b.Navigation("PorteEmpresa");
                });

            modelBuilder.Entity("Assislicitacao.Models.Endereco", b =>
                {
                    b.HasOne("Assislicitacao.Models.Municipio", "Municipio")
                        .WithMany("Enderecos")
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("Assislicitacao.Models.Municipio", b =>
                {
                    b.HasOne("Assislicitacao.Models.Estado", "Estado")
                        .WithMany("Municipios")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("Assislicitacao.Models.Usuario", b =>
                {
                    b.HasOne("Assislicitacao.Models.TipoUsuario", "TipoUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("Assislicitacao.Models.Endereco", b =>
                {
                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("Assislicitacao.Models.Estado", b =>
                {
                    b.Navigation("Municipios");
                });

            modelBuilder.Entity("Assislicitacao.Models.Municipio", b =>
                {
                    b.Navigation("Enderecos");
                });

            modelBuilder.Entity("Assislicitacao.Models.PorteEmpresa", b =>
                {
                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("Assislicitacao.Models.TipoUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
